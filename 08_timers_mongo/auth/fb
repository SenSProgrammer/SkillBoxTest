// Import the functions you need from the SDKs you need
import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs, setDoc } from 'firebase/firestore/lite';
const nanoid = require('nanoid');

// TODO: Add SDKs for Firebase products that you want to use
// https://firebase.google.com/docs/web/setup#available-libraries

// Your web app's Firebase configuration
// For Firebase JS SDK v7.20.0 and later, measurementId is optional
const firebaseConfig = {
  apiKey: "AIzaSyBTCPbMnIp4QAk99IvUFKkXu1az9rgUdZ0",
  authDomain: "timers-18c64.firebaseapp.com",
  databaseURL: "https://timers-18c64-default-rtdb.firebaseio.com",
  projectId: "timers-18c64",
  storageBucket: "timers-18c64.firebasestorage.app",
  messagingSenderId: "206971021560",
  appId: "1:206971021560:web:bc7e61276b03499336730d",
  measurementId: "G-M3X472FL6Y"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);

//console.log(app);

// набор методов для чтения-записи
// записать нового пользователя с паролем, выдать идентификатор

const db = getFirestore(app);



// Get a list of cities from your database
async function addUser(db, username, password) {
  const usersCol = collection(db, 'users');
  userId=nanoid();
  await usersCol.doc(userId).set({
    username: username,
    password: password,
   });

}

async function getUserId(db, username, password) {
  const usersCol = collection(db, 'users');
  userId=nanoid();
  await usersCol.doc(userId).set({
    username: username,
    password: password,
   });
return u
}



console.log(db);

const usersDb = db.collection('users');


console.log(usersDb);


const liam = usersDb.doc('lragozzine');
await liam.set({
  first: 'Liam',
  last: 'Ragozzine',
  address: '133 5th St., San Francisco, CA',
  birthday: '05/13/1990',
  age: '30'
 });

 await usersDb.doc('vpeluso').set({
  first: 'Vanessa',
  last: 'Peluso',
  address: '49 Main St., Tampa, FL',
  birthday: '11/30/1977',
  age: '47'
 });


 const users = await db.collection('users').get();

 setTimeout(()=>{console.log(users)},2000);
